TODO:
Steps:
Fix Remainder of Gtraphics and Full Screen bugs.(currently the oddness with NoGL.
Sound system!
Lay out GraphicsToolkit(s), buffering, resizing, drawing and flipping. Then filesystem.
Do a very simple lobby graphical/interface system?
Start game render system as advanced as I can... 3D is ideal if not voxels/RA2 look.

Lay out game content into objects, build some basic "play" in.
DOS and leaving sessions open.

Careful of aborts at early stages of login - might lock out people with sockets in stasis.

Login stage must still kick...
Stream Cipher

I really need to work on the actual graphics, frame manager, resize events and map/voxel editor!...

Handle game connections and streams (inc Stream Ciphers, RSA PUB/PRI and FS) well! 
Hearbeats ensure that conenctions not closed.
Encrypt connection where applicable
STREAMS
Ping support?
better protection against data corruption in transit? packet length misread and fucked up??

Do file system.
Sound System
Do the actual graphic code and editor, decide GL vs SW entirely. Native libs? 
Good Window Manager must handle key events from all, and windowevents from FSFrame too,
Tidy up the locations of stuff - engine vs cli/srv.
Art and design. Music.

Before Release:

Ensure Stream Cipher secure. 
Ensure private key remains so - do NOT allow it into any other bit of code.
TODO log unexpected calls by IP, if limit hit, ban and email me.
Release.

FUTURE:
Tie with FaceBook?
Update, profile infrasructure.
Ensure multiplatform robustness
AI opponents.
Shroud
Cvar system?

Make an infrastructure for profile/player/Universe/Game loading

Make sure of no servedrside cross-game interference or overflowing.

Improve all stuff for future games.
Work w/ JGX?

Check out ballerplaya.info
Antiflood

CVARS - by Map	
	
	public void mainLoop() {
		
		while(gameState<200){
			//updateGraphics();
			switch(gameState){
			
			case 0:{
				l.info("[CLIENT] Initialisation started.");
				/*
				Cvar.Add(new Cvar("s_implementation",0.0f,"dummy"));
				Cvar.Add(new Cvar("s_soundenabled",1.0f,"true"));
				*/
				//SoundDrivers.Initialise();
				gameState++;
				//Blocking tasks only can be done here
				break;
			}
			case 1:{	
				FileSystem.Initialise();
		gameState = 20;
		
		l.info("[CLIENT] Subsystems initialised.");
		gameState = 30;
		Updater.checkCache();
		gameState=40;
		//UpdateConnection.connect("127.0.0.1");
		
		break;
			}
			case 50:{
				//Setup synced threads and timing
				while(maingame){
					//Frames
					
				}
				
			break;
			}
			}
		}
		
		this.shutdown();
		this.cleanup();
		System.exit(0);
	}

